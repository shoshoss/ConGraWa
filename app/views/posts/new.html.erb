<%= turbo_frame_tag "post_modal" do %>
  <dialog id="post_modal_dialog" class="modal bg-gray-500 bg-opacity-50" data-controller="post-modal">
    <div class="modal-box p-2 max-h-screen overflow-hidden">
      <div class="flex justify-end items-center">
        <button class="text-blue-500 hover:text-blue-700 font-semibold" data-action="click->post-modal#closeModal">閉じる</button>
      </div>

      <div class="mx-auto pt-2">
        <!-- 録音コントロール -->
        <section>
          <canvas class="visualizer w-full h-24 md:h-80" style="background-color: #05aaff;"></canvas>
        </section>

        <div class="flex justify-around items-center pt-2 px-5">
          <button class="record text-xl bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-5 md:px-10 rounded disabled:opacity-50" data-action="click->post-modal#startRecording">
            録音<br class="md:hidden">開始
          </button>
          <span class="timer text-gray-800 font-semibold text-3xl md:text-3xl lg:text-3xl">00:00</span>
          <button class="stop text-xl bg-red-500 hover:bg-red-700 text-white font-semibold py-2 px-5 md:px-10 rounded disabled:opacity-50" data-action="click->post-modal#stopRecording" disabled>
            録音<br class="md:hidden">完了
          </button>
        </div>

        <%= form_with model: @post, data: { controller: "post-modal", action: "turbo:submit-end->post-modal#afterClose" } do |f| %>
            <%= render partial: 'posts/form', locals: { f: f, is_reply_form: false, send_to_user: nil, post: @post } %>
            <div class="form-control mt-4 lg:mt-6">
              <%= f.submit t('helpers.submit.post'), class: "btn text-xl bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded disabled:opacity-50" %>
            </div>
        <% end %>
      </div>

      <!-- モーダルを閉じるボタン -->
      <div class="modal-action my-4 flex justify-center">
        <button class="btn bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded" data-action="click->post-modal#closeModal">閉じる</button>
      </div>
    </div>
  </dialog>


<script>
  document.addEventListener('input', function(event) {
    if (event.target.tagName.toLowerCase() !== 'textarea') return;

    const textarea = event.target;
    const modalBox = document.querySelector('.modal-box');
    const maxModalHeight = window.innerHeight;

    // モーダル全体の高さが画面の高さを超えた場合の処理
    if (modalBox.scrollHeight >= maxModalHeight) {
      // テキストエリアの高さを固定し、スクロール可能にする
      textarea.classList.add('overflow-y-auto');
    } else {
      textarea.classList.remove('overflow-y-auto');
      // テキストエリアの高さを調整
      textarea.style.height = 'auto';
      textarea.style.height = textarea.scrollHeight + 'px';
      // モーダルの高さを調整
      modalBox.style.height = 'auto';
      modalBox.style.height = modalBox.scrollHeight + 'px';
    }
  });
</script>






<% end %>
